# -*- coding: utf-8 -*-
"""Task-4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UBHQXEXRtLmbA7OfKcv6-VaGl3s1S6Ur
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import Pipeline
from sklearn.metrics import mean_squared_error, r2_score
df = pd.read_excel("house_prices_cleaned.xlsx")
df.columns = df.columns.str.strip().str.title()
df.dropna(inplace=True)
print(df.describe())
sns.pairplot(df)
plt.show()
for col in ['Size', 'Rooms', 'Price']:
    if col not in df.columns:
        raise KeyError(f"Column '{col}' not found in the dataset!")
sns.boxplot(data=df[['Size', 'Rooms', 'Price']])
plt.show()
X = df[['Size', 'Location', 'Rooms']]
y = df['Price']
numeric_features = ['Size', 'Rooms']
numeric_transformer = StandardScaler()
categorical_features = ['Location']
categorical_transformer = OneHotEncoder(drop='first')
preprocessor = ColumnTransformer(
    transformers=[
        ('num', numeric_transformer, numeric_features),
        ('cat', categorical_transformer, categorical_features)
    ])
model = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('regressor', LinearRegression())
])
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
print(f"\nRoot Mean Square Error (RMSE): {rmse:.2f}")
print(f"RÂ² Score: {r2:.2f}")
plt.figure(figsize=(6, 6))
plt.scatter(y_test, y_pred, alpha=0.7)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted Prices")
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
plt.grid(True)
plt.show()